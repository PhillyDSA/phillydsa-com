---
- name: Import Secrets
  include_vars: secret_keys.yml

- name: Add Site Config
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/{{ domain }}.conf owner=root group=root

- name: Create http_user
  user: name={{ http_user }} group={{ http_user }}

- name: Create SSH Public Deploy Key
  copy: content="{{ git_ssh_pub_key }}"
        dest=/root/.ssh/id_deploy.pub
        mode=0644

- name: Create SSH Private Deploy Key
  copy: content="{{ git_ssh_priv_key }}"
        dest=/root/.ssh/id_deploy
        mode=0600

- name: Create public HTML directory
  file: dest={{ http_root }} mode=0775 owner={{ http_user }} group={{ http_user }} state=directory

- name: Clone Git Repository
  git:
    repo: git@github.com:{{github_user}}/{{github_repo}}.git
    dest: "{{ http_root }}/{{ domain }}"
    accept_hostkey: yes
    force: yes
    key_file: "/root/.ssh/id_deploy"

- name: Copy conf.ini
  copy:
    content: "{{ django_secret_key }}"
    dest: "{{ http_root }}/{{ domain }}/conf.ini"
    owner: "{{ http_user }}"
    group: "{{ http_user }}"

- name: Install Virtual Environment & Requirements
  pip:
    requirements: "{{ http_root }}/{{ domain }}/requirements/base.txt"
    virtualenv: "{{ http_root }}/venvs/{{ domain }}"
    virtualenv_python: python3.5

- name: Create static files directory
  file: dest={{ http_root }}/{{ domain }}/config/static mode=0775 owner={{ http_user }} group={{ http_user }} state=directory

- name: Create Collect Static Script
  template:
    src: "collect_static.sh.j2"
    dest: "{{ http_root }}/{{ domain }}/collect_static.sh"
    mode: 0755

- name: Collect Static Files
  shell: "{{ http_root }}/{{ domain }}/collect_static.sh"

- name: Create Migration Script
  template:
    src: "migrate.sh.j2"
    dest: "{{ http_root }}/{{ domain }}/migrate.sh"
    mode: 0755

- name: Migrate Database
  shell: "{{ http_root }}/{{ domain }}/migrate.sh"

- name: Create Server Start Script
  template:
    src: "start_server.sh.j2"
    dest: "{{ http_root }}/{{ domain }}/start_server.sh"
    mode: 0755

- name: Fix permissions on git clone
  file:
    path: "{{ http_root }}/{{ domain }}/"
    owner: "{{ http_user }}"
    group: "{{ http_user }}"
    recurse: true

- name: Enable Site Config
  file: src=/etc/nginx/sites-available/{{ domain }}.conf dest=/etc/nginx/sites-enabled/{{ domain }}.conf state=link
  notify:
    - Reload Nginx

- name: Install Supervisord Config
  template: src=supervisor.conf.j2 dest=/etc/supervisor/conf.d/{{ domain }}.conf
  notify:
    - Restart Supervisord
    - Read Supervisord Program
    - Start Supervisord Program
