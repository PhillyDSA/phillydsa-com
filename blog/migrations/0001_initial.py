# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-10 01:13
from __future__ import unicode_literals

import common.blocks
from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.wagtailroutablepage.models
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailimages', '0019_delete_filter'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogEntry',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('og_type', models.CharField(choices=[('article', 'Article'), ('website', 'Website'), ('book', 'Book'), ('video', 'Video'), ('profile', 'Profile')], default='website', help_text='See Object Types: https://developers.facebook.com/docs/reference/opengraph/', max_length=127, verbose_name='OG Page Type')),
                ('blog_date', models.DateField(verbose_name='Blog Entry Date')),
                ('blog_author', models.CharField(max_length=255)),
                ('body', wagtail.wagtailcore.fields.StreamField((('banner_image', wagtail.wagtailcore.blocks.StructBlock((('photo', wagtail.wagtailimages.blocks.ImageChooserBlock(required=True)), ('internal_link', wagtail.wagtailcore.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.wagtailcore.blocks.URLBlock(required=False)), ('alt_text', wagtail.wagtailcore.blocks.CharBlock(max_length=255, required=False))))), ('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailcore.blocks.StructBlock((('photo', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('photo_alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right'), ('center', 'Center')])), ('caption', wagtail.wagtailcore.blocks.CharBlock(max_length=255)), ('caption_alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('tl', 'Left'), ('tr', 'Right'), ('tc', 'Center')]))))), ('h1', common.blocks.HeaderH1(classname='full title')), ('subhead', common.blocks.Subhead(classname='full title')), ('block_quote', wagtail.wagtailcore.blocks.StructBlock((('quote', wagtail.wagtailcore.blocks.TextBlock(classname='full', max_length=255, required=True)),))), ('call_to_action', wagtail.wagtailcore.blocks.StructBlock((('title', wagtail.wagtailcore.blocks.CharBlock(max_length=255)), ('cta_copy', wagtail.wagtailcore.blocks.CharBlock(max_length=255)), ('button_title', wagtail.wagtailcore.blocks.CharBlock(max_length=255)), ('button_link', wagtail.wagtailcore.blocks.PageChooserBlock(required=False)), ('button_external_link', wagtail.wagtailcore.blocks.URLBlock(required=False))))), ('small_call_to_action', wagtail.wagtailcore.blocks.StructBlock((('button_copy', wagtail.wagtailcore.blocks.CharBlock(max_length=32)), ('button_link', wagtail.wagtailcore.blocks.PageChooserBlock(required=False)), ('button_external_link', wagtail.wagtailcore.blocks.URLBlock(required=False)), ('alignment', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('tl', 'Left'), ('tr', 'Right'), ('tc', 'Center')])))))))),
                ('share_image', models.ForeignKey(blank=True, help_text='Should be larger than 1200 x 630px\n See https://developers.facebook.com/docs/sharing/best-practices#images', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Share Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='BlogHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.wagtailroutablepage.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
    ]
